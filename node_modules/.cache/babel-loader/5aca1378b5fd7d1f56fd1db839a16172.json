{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\appl\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport React, { useState, useEffect } from 'react';\nimport { XYPlot, ArcSeries } from 'react-vis'; // import {EXTENDED_DISCRETE_COLOR_RANGE} from 'react-vis/theme';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PI = Math.PI;\n\nfunction getSeconds() {\n  return Math.floor(new Date().getTime() / 1000);\n}\n\nexport default function ClockExample() {\n  _s();\n\n  const [time, setTime] = useState(getSeconds());\n  useEffect(() => {\n    const handle = setInterval(() => setTime(getSeconds()), 100);\n    return () => clearInterval(handle);\n  }, []);\n  const seconds = time % 60;\n  const minutes = time / 60 % 60;\n  const hours = time / (60 * 24) % 24;\n  return /*#__PURE__*/_jsxDEV(XYPlot, {\n    xDomain: [-3, 3],\n    yDomain: [-3, 3],\n    width: 300,\n    getAngle: d => d.time,\n    getAngle0: () => 0,\n    height: 300,\n    children: /*#__PURE__*/_jsxDEV(ArcSeries, {\n      animation: {\n        damping: 9,\n        stiffness: 300\n      },\n      radiusDomain: [0, 3],\n      data: [{\n        time: seconds / 60 * 2 * PI,\n        radius0: 1,\n        radius: 1.5,\n        color: 0\n      }, {\n        time: minutes / 60 * 2 * PI,\n        radius0: 1.6,\n        radius: 2.1,\n        color: 1\n      }, {\n        time: hours / 24 * 2 * PI,\n        radius0: 2.2,\n        radius: 2.7,\n        color: 2\n      }] // colorRange={EXTENDED_DISCRETE_COLOR_RANGE}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ClockExample, \"EiOHllhNDC6zY3VO4WSMMwWMSTA=\");\n\n_c = ClockExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClockExample\");","map":{"version":3,"sources":["C:/React/appl/src/App.js"],"names":["React","useState","useEffect","XYPlot","ArcSeries","PI","Math","getSeconds","floor","Date","getTime","ClockExample","time","setTime","handle","setInterval","clearInterval","seconds","minutes","hours","d","damping","stiffness","radius0","radius","color"],"mappings":";;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,SAAQC,MAAR,EAAgBC,SAAhB,QAAgC,WAAhC,C,CAEA;;;AAEA,MAAMC,EAAE,GAAGC,IAAI,CAACD,EAAhB;;AAEA,SAASE,UAAT,GAAsB;AACpB,SAAOD,IAAI,CAACE,KAAL,CAAW,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAlC,CAAP;AACD;;AAED,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACM,UAAU,EAAX,CAAhC;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,MAAM,GAAGC,WAAW,CAAC,MAAMF,OAAO,CAACN,UAAU,EAAX,CAAd,EAA8B,GAA9B,CAA1B;AACA,WAAO,MAAMS,aAAa,CAACF,MAAD,CAA1B;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,QAAMG,OAAO,GAAGL,IAAI,GAAG,EAAvB;AACA,QAAMM,OAAO,GAAIN,IAAI,GAAG,EAAR,GAAc,EAA9B;AACA,QAAMO,KAAK,GAAIP,IAAI,IAAI,KAAK,EAAT,CAAL,GAAqB,EAAnC;AACA,sBACI,QAAC,MAAD;AACI,IAAA,OAAO,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,CADb;AAEI,IAAA,OAAO,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,CAFb;AAGI,IAAA,KAAK,EAAE,GAHX;AAII,IAAA,QAAQ,EAAEQ,CAAC,IAAIA,CAAC,CAACR,IAJrB;AAKI,IAAA,SAAS,EAAE,MAAM,CALrB;AAMI,IAAA,MAAM,EAAE,GANZ;AAAA,2BAQE,QAAC,SAAD;AACI,MAAA,SAAS,EAAE;AACTS,QAAAA,OAAO,EAAE,CADA;AAETC,QAAAA,SAAS,EAAE;AAFF,OADf;AAKI,MAAA,YAAY,EAAE,CAAC,CAAD,EAAI,CAAJ,CALlB;AAMI,MAAA,IAAI,EAAE,CACJ;AAACV,QAAAA,IAAI,EAAGK,OAAO,GAAG,EAAX,GAAiB,CAAjB,GAAqBZ,EAA5B;AAAgCkB,QAAAA,OAAO,EAAE,CAAzC;AAA4CC,QAAAA,MAAM,EAAE,GAApD;AAAyDC,QAAAA,KAAK,EAAE;AAAhE,OADI,EAEJ;AACEb,QAAAA,IAAI,EAAGM,OAAO,GAAG,EAAX,GAAiB,CAAjB,GAAqBb,EAD7B;AAEEkB,QAAAA,OAAO,EAAE,GAFX;AAGEC,QAAAA,MAAM,EAAE,GAHV;AAIEC,QAAAA,KAAK,EAAE;AAJT,OAFI,EAQJ;AAACb,QAAAA,IAAI,EAAGO,KAAK,GAAG,EAAT,GAAe,CAAf,GAAmBd,EAA1B;AAA8BkB,QAAAA,OAAO,EAAE,GAAvC;AAA4CC,QAAAA,MAAM,EAAE,GAApD;AAAyDC,QAAAA,KAAK,EAAE;AAAhE,OARI,CANV,CAgBI;;AAhBJ;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BD;;GAtCuBd,Y;;KAAAA,Y","sourcesContent":["\n\n// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useState, useEffect} from 'react';\n\nimport {XYPlot, ArcSeries} from 'react-vis';\n\n// import {EXTENDED_DISCRETE_COLOR_RANGE} from 'react-vis/theme';\n\nconst PI = Math.PI;\n\nfunction getSeconds() {\n  return Math.floor(new Date().getTime() / 1000);\n}\n\nexport default function ClockExample() {\n  const [time, setTime] = useState(getSeconds());\n  useEffect(() => {\n    const handle = setInterval(() => setTime(getSeconds()), 100);\n    return () => clearInterval(handle);\n  }, []);\n  const seconds = time % 60;\n  const minutes = (time / 60) % 60;\n  const hours = (time / (60 * 24)) % 24;\n  return (\n      <XYPlot\n          xDomain={[-3, 3]}\n          yDomain={[-3, 3]}\n          width={300}\n          getAngle={d => d.time}\n          getAngle0={() => 0}\n          height={300}\n      >\n        <ArcSeries\n            animation={{\n              damping: 9,\n              stiffness: 300\n            }}\n            radiusDomain={[0, 3]}\n            data={[\n              {time: (seconds / 60) * 2 * PI, radius0: 1, radius: 1.5, color: 0},\n              {\n                time: (minutes / 60) * 2 * PI,\n                radius0: 1.6,\n                radius: 2.1,\n                color: 1\n              },\n              {time: (hours / 24) * 2 * PI, radius0: 2.2, radius: 2.7, color: 2}\n            ]}\n            // colorRange={EXTENDED_DISCRETE_COLOR_RANGE}\n        />\n      </XYPlot>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}